@using EpicAlbergo.Models.Dto
@model EpicAlbergo.Models.Dto.ReservationDto

@{
    ViewData["Title"] = "Registra Prenotazione";
    var reservationTypes = ViewBag.ReservationTypes as IEnumerable<ReservationType>;
}

<h1>@ViewData["Title"]</h1>

<form asp-action="RegisterReservation" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="CustomerId" class="control-label"></label>
        <select asp-for="CustomerId" class="form-control" id="customerSelect">
            <option value="">Select a customer</option>
            @if (ViewBag.Customers != null)
            {
                foreach (var customer in ViewBag.Customers)
                {
                    <option value="@customer.CustomerId">@customer.CustomerName @customer.CustomerSurname</option>
                }
            }
            else
            {
                <option value="">No customers available</option>
            }
        </select>
        <span asp-validation-for="CustomerId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="RoomId" class="control-label"></label>
        <select asp-for="RoomId" class="form-control" id="roomSelect">
            <option value="">Select a room</option>
        </select>
        <span asp-validation-for="RoomId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ReservationStartStayDate" class="control-label"></label>
        <input asp-for="ReservationStartStayDate" class="form-control" type="date" id="reservationStartStayDate" />
        <span asp-validation-for="ReservationStartStayDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ReservationEndStayDate" class="control-label"></label>
        <input asp-for="ReservationEndStayDate" class="form-control" type="date" id="reservationEndStayDate" />
        <span asp-validation-for="ReservationEndStayDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ReservationDeposit" class="control-label"></label>
        <input asp-for="ReservationDeposit" class="form-control" type="number" step="0.01" />
        <span asp-validation-for="ReservationDeposit" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ReservationPrice" class="control-label"></label>
        <input asp-for="ReservationPrice" class="form-control" type="number" id="reservationPrice" step="0.01" readonly />
        <span asp-validation-for="ReservationPrice" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ReservationType" class="control-label"></label>
        <select asp-for="ReservationType" class="form-control">
            <option value="">Select a reservation type</option>
            @foreach (var type in ViewBag.ReservationTypes)
            {
                <option value="@type">@type</option>
            }
        </select>
        <span asp-validation-for="ReservationType" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Register" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Back to reservations list</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://ajax.aspnetcdn.com/ajax/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            // Carica tutte le stanze quando la pagina è pronta
            $.ajax({
                url: '@Url.Action("GetAvailableRooms", "Reservation")',
                type: 'GET',
                success: function (data) {
                    var $roomSelect = $('#roomSelect');
                    $roomSelect.empty();
                    $roomSelect.append('<option value="">Select a room</option>');
                    $.each(data, function (index, room) {
                        $roomSelect.append('<option value="' + room.roomId + '" data-price="' + room.roomPrice + '">' + room.roomNumber + ' - ' + room.roomDescription + '</option>');
                    });
                    updateReservationPrice(); // Aggiorna il prezzo subito dopo il popolamento delle stanze
                }
            });

            // Calcola il prezzo della prenotazione quando cambia la stanza selezionata o le date
            $('#roomSelect, #reservationStartStayDate, #reservationEndStayDate').change(function () {
                updateReservationPrice();
            });

            // Funzione per aggiornare il prezzo della prenotazione
            function updateReservationPrice() {
                var roomPrice = $('#roomSelect').find(':selected').data('price');
                var startDate = new Date($('#reservationStartStayDate').val());
                var endDate = new Date($('#reservationEndStayDate').val());

                if (roomPrice && !isNaN(startDate.getTime()) && !isNaN(endDate.getTime())) {
                    var timeDiff = endDate - startDate;
                    var daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24)); // Converti la differenza di tempo in giorni
                    var totalPrice = roomPrice * daysDiff;

                    $('#reservationPrice').val(totalPrice.toFixed(2)); // Aggiorna il campo del prezzo
                } else {
                    $('#reservationPrice').val(''); // Pulisci il campo del prezzo se i dati non sono validi
                }
            }
        });
    </script>
}
